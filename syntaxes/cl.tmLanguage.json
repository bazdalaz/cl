{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/cl.tmbundle/blob/master/Syntaxes/cl.plist",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/textmate/cl.tmbundle/commit/42da2c6ff5d86c068f",
	"comment": "cl Syntax: version 0.3",
	"fileTypes": [
		"cl",
		"ls",
		"le"
	],
	"firstLineMatch": "\\A#!.*?\\bcl(\\d+(\\.\\d+)?)?\\b|\\A--\\s+-\\*-\\s*cl\\s*-\\*-",
	"keyEquivalent": "^~L",
	"name": "cl",
	"patterns": [

		{
			"match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.hexadecimal.cl"
		},
		{
			"match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(\\.[0-9A-Fa-f]+)?([eE]-?\\d*)?([pP][-+]\\d+)?",
			"name": "constant.numeric.float.hexadecimal.cl"
		},
		{
			"match": "(?<![\\w\\d.])\\d+(?![pPeE.0-9])",
			"name": "constant.numeric.integer.cl"
		},
		{
			"match": "(?<![\\w\\d.])\\d+(\\.\\d+)?([eE]-?\\d*)?",
			"name": "constant.numeric.float.cl"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cl"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cl"
				}
			},
			"name": "string.quoted.single.cl",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cl"
				}
			},
			"name": "string.quoted.double.cl",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.cl"
				},
				"1": {
					"name": "punctuation.definition.string.begin.cl"
				}
			},
			"contentName": "meta.embedded.cl",
			"end": "(\\]\\2\\])",
			"endCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.cl"
				},
				"1": {
					"name": "punctuation.definition.string.end.cl"
				}
			},
			"patterns": [
				{
					"include": "source.cl"
				}
			]
		},
		{
			"begin": "(?<!--)\\[(=*)\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cl"
				}
			},
			"end": "\\]\\1\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cl"
				}
			},
			"name": "string.quoted.other.multiline.cl"
		},
		{
			"begin": "(^[ \\t]+)?(?=--)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.cl"
				}
			},
			"end": "(?!\\G)((?!^)[ \\t]+\\n)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.trailing.cl"
				}
			},
			"patterns": [
				{
					"begin": "--",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.cl"
						}
					},
					"end": "\\n",
					"name": "comment.line.double-dash.cl"
				}
			]
		},
		{
			"match": "\\b(PAUSE|WAIT|ENB|KEEPENB|WHEN)\\b",
			"name": "keyword.control.cl"
		},
		{
			"match": "\\b(CALL|ELSE|FOR|IF|THEN|RESUME|GOTO|LOOP|EXIT|ABORT|REPEAT|BREAK)\\b",
			"name": "keyword.control.goto.cl"
		},
		{
			"match": "\\b(AND|OR|NOT|XOR|MOD|NOT\\s)\\b",
			"name": "keyword.operator.logical.cl"
		},
		{
			"match": "\\+|-|\\*|\\/|\\=|(<>)|(>=)|(<=)|<|>|(?<!\\.)\\.{2}(?!\\.)",
			"name": "keyword.operator.arithmetic.cl"
		},

		{
			"match": "\\&",
			"name": "punctuation.separator.continuation.cl"
		},
		{
			"match": "\\b(SET|SEND|WRITE|READ|FROM)\\b",
			"name": "keyword.others.cl"
		},
		{
			"match": "\\b(PROGRAM|MAN|AUTO|CAS|STOP|START|OPEN|CLOSE|RUN|ON|OFF|RESET|HIGH|LOW|NORMAL|RESTSTRT|RESET|IN\\s|OUT)\\b",
			"name": "constant.language.cl"
		},
		{
			"match": "\\b(INT|ABS|AVG|SQRT|SET_BAD|SUM|MAX|MIN|NOW|DATE|HOUR|SECOND|DATE_TIME)\\b",
			"name": "support.function.library.cl"
		},
		{
			"match": "\\b(SEQUENCE|HANDLER|RESTART|END)\\b\\s*\\w*",
			"name": "entity.name.section.cl"
		},
		{
			"match": "\\b(STEP|PHASE|SUBROUTINE)\\b\\s*\\w*",
			"name": "entity.name.function.cl"
		},
		{
			"match": "\\b(HOLD|SHUTDOWN)\\b\\s*\\w*",
			"name": "support.function.cl"
		},

		{
			"match": "\\b(LOCAL|LOGICAL|TIME|ARRAY|NN|FL|STRING|POINT|MODATTR)\\b",
			"name": "entity.name.type.local.cl"
		},

		{
			"match": "APM|HPM|EXTERNAL|\\sAT|\\!|\\$|:|\\^|\\b(BOX|NM\\d{2}[BN]\\d{2})\\b",
			"name": "entity.name.type.cl"
		},

		{
			"match": "\\b(\\.[A-Z0-9_]{2,10})\\b",
			"name": "variable.cl"
		},

		{	"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*(?:[({\"']|\\[\\[))",
			"name": "support.function.cl"

		}    
	],
	"repository": {
		"escaped_char": {
			"patterns": [
				{
					"match": "\\\\[abfnrtvz\\\\\"'\\n]",
					"name": "constant.character.escape.cl"
				},
				{
					"match": "\\\\\\d{1,3}",
					"name": "constant.character.escape.byte.cl"
				},
				{
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
					"name": "constant.character.escape.byte.cl"
				},
				{
					"match": "\\\\u\\{[0-9A-Fa-f]+\\}",
					"name": "constant.character.escape.unicode.cl"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.character.escape.cl"
				}
			]
		}
	},
	"scopeName": "source.cl",
	"uuid": "93E017CC-6F27-11D9-90EB-000D93589AF7"
}